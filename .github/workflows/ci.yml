name: CI - SAST / SCA / DAST (demo)
on: [push, pull_request]

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install semgrep snyk

      - name: Run Semgrep (SAST)
        run: |
          semgrep --config .semgrep.yml --json --output semgrep.json || true
        continue-on-error: true

      - name: Run Snyk (SCA) - requires SNYK_TOKEN secret for full functionality
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          # If you don't have a SNYK_TOKEN the test may still run but with limited features.
          snyk test --file=requirements.txt --json-file-output=snyk.json || true

      - name: Start Flask app in background for DAST
        run: |
          python app.py &
          # wait a bit for the server to be ready
          sleep 3

      - name: Run simple DAST with curl to show XSS evidence (lightweight fallback)
        run: |
          # We include a simple check that fetches the endpoint with an XSS payload and saves output
          curl "http://localhost:5000/echo?msg=<script>alert(1)</script>" -s > dast_response.html || true

      - name: Generate simple HTML report from semgrep/snyk/dast outputs
        run: |
          python3 report_generator.py semgrep.json snyk.json dast_response.html report.html || true

      - name: Upload reports artifact
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            semgrep.json
            snyk.json
            dast_response.html
            report.html
